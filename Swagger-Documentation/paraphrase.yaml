swagger: "2.0"
info:
  description: "A Paraphrase-Generator built using transformers which takes an English sentence as an input and produces a set of paraphrased sentences.
This is an NLP task of conditional text-generation. The model used here is the T5ForConditionalGeneration from the huggingface transformers library. 
This model is trained on the Google's PAWS Dataset and the model is saved in the transformer model hub of hugging face library under the name Vamsi/T5_Paraphrase_Paws."
  version: "1.0.0"
  title: "Paraphrase Generator"
  contact:
    email: "saivamsi.ds123@gmail.com"
host: "http://ilabs-api-docs.s3-website-us-east-1.amazonaws.com/?urls.primaryName=nlp-paraphrase#/"
basePath: "/"
tags:
- name: "Input from streamlit"
  description: "Model and tokenizer instantiation"
schemes:
- "https"
- "http"
paths:
  /run_forward:
    post:
      tags:
      - "Input from streamlit"
      summary: "Run the forward method of the model"
      description: ""
      operationId: "addPet"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Input_from_streamlit"
      responses:
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Input_from_streamlit:
    type: "object"
    properties:
      sentence:
        type: "string"
        description: "Input sentence from the user"
      Decoding_params:
        type: "object"
        description: "decoding params"
        
  Decoding_Params:
    type: "object"
    properties:
      max_len:
        type: "integer"
        format: "int64"
        description: "Max length of the sentence"
      strategy:
        type: "string"
        description: ""
      return_sen_num:
        type: "integer"
        format: "int64"
        description: "Number of return sentences"
      beams:
        type: "integer"
        format: "int64"
        description: "Number of beams"
      ngram:
        type: "integer"
        format: "int64"
        description: "Number of n-gram penalties"
      top_p:
        type: "number"
        description: "Top p sampling variable"
      top_k:  
        type: "integer"
        format: "int64"
        description: "Top k sampling variable"
       
    
  

        
        
        
        
        
        
        
        
        
